@page "/Tecnico/Eliminar/{TecnicoId:int}"

@inject TecnicoService tecnicoService
@inject NavigationManager navigationManager
@rendermode InteractiveServer

<PageTitle>Eliminar Técnico</PageTitle>

@* Sección de mensajes al usuario *@
<label style="font-size:18px; color:red;" hidden="@string.IsNullOrEmpty(Confirmacion)">
    @Confirmacion
</label>
<label style="font-size:18px; color:darkred;" hidden="@string.IsNullOrEmpty(Pregunta)">
    @Pregunta
</label>

<div class="container card shadow-lg">

    @* Encabezado del formulario *@
    <div class="header text-center">
        <h5 class="card-header card-title">Eliminar Técnico</h5>
    </div>

    @* Detalles del técnico y acciones disponibles *@
    <div class="card-body">
        <p><strong>TecnicoId: </strong>@Tecnico.TecnicoId</p>
        <hr style="height:4px; background-color:black;" />

        <p><strong>Nombre: </strong>@Tecnico.NombreTecnico</p>
        <hr style="height:4px; background-color:black;" />

        <p><strong>Sueldo: </strong>@Tecnico.SueldoHora.ToString("N2")</p>
        <hr style="height:4px; background-color:black;" />
    </div>

    <div class="card-footer text-center mt-2">
        <a href="/Tecnico/Index" class="btn btn-outline-primary">
            <span class="bi bi-arrow-left"></span>Volver
        </a>

        <button class="btn btn-outline-danger" @onclick="Borrar">
            <span class="bi bi-trash"></span>Eliminar
        </button>
    </div>
</div>

@code {
    // Recibe el ID del técnico desde la URL
    [Parameter]
    public int TecnicoId { get; set; }

    // Instancia del técnico a eliminar
    private Tecnicos Tecnico { get; set; } = new Tecnicos();

    // Mensajes de confirmación y pregunta
    private string Confirmacion { get; set; } = string.Empty;
    private string Pregunta { get; set; } = string.Empty;

    // Carga inicial: obtiene los datos del técnico
    protected override async Task OnInitializedAsync()
    {
        Tecnico = await tecnicoService.Buscar(TecnicoId);
        Pregunta = "¿Está seguro de eliminar el técnico?";
    }

    // Método que intenta eliminar el técnico
    public async Task Borrar()
    {
        var eliminado = await tecnicoService.Eliminar(TecnicoId);

        if (eliminado != null)
        {
            Confirmacion = "Técnico eliminado correctamente";
            navigationManager.NavigateTo("Tecnico/Index");
        }
        else
        {
            Confirmacion = "No se pudo eliminar al técnico";
        }
    }
}