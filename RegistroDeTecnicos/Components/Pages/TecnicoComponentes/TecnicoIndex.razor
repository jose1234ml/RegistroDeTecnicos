@page "/Tecnico/Index"

@inject TecnicoService tecnicoservice
@rendermode InteractiveServer

<PageTitle>Registro</PageTitle>

<section class="container card shadow-lg rounded mt-4 p-0">

	<header class="bg-light py-4 px-7 position-relative border-bottom">
		<h4 class="m-0 position-absolute start-50 top-50 translate-middle text-center">Consulta de Técnicos</h4>
		<a href="/Tecnico/Crear" class="btn btn-success position-absolute end-0 top-50 translate-middle-y me-3">
			<i class="bi bi-plus-square me-1"></i> Crear
		</a>
	</header>

	<div class="card-body">

		<div class="row mb-3">
			<div class="col-md-3">
				<label class="form-label fw-bold">Filtrar por</label>
				<InputSelect class="form-select" @bind-Value="Filtro">
					<option disabled selected value="">Seleccione una opción</option>
					<option value="TecnicoId">Técnico Id</option>
					<option value="Nombre">Nombre</option>
				</InputSelect>
			</div>
			<div class="col-md-5">
				<label class="form-label fw-bold">Búsqueda</label>
				<div class="input-group">
					<input class="form-control" @bind="ValorFiltro" placeholder="Buscador" />
					<button class="btn btn-primary" @onclick="Buscar">
						<i class="bi bi-search"></i>
					</button>
				</div>
			</div>
		</div>

		<div class="table-responsive">
			<table class="table table-hover">
				<thead>
					<tr>
						<th>Técnico Id</th>
						<th>Nombre</th>
						<th>Sueldo por hora</th>
						<th>Editar</th>
					</tr>
				</thead>
				<tbody>
					@foreach (var tecnico in ListaTecnicos)
					{
						<tr>
							<td>@tecnico.TecnicoId</td>
							<td>@tecnico.NombreTecnico</td>
							<td>@tecnico.SueldoHora.ToString("N2")</td>
							<td>
								<a href="/Tecnico/Modificar/@tecnico.TecnicoId" class="btn btn-outline-primary">
									<i class="bi bi-pencil-square"></i>
								</a>
							</td>
						</tr>
					}
				</tbody>
			</table>
		</div>
	</div>

	<footer class="bg-light py-3 border-top"></footer>
</section>

@code {
	public List<Tecnicos> ListaTecnicos { get; set; } = new List<Tecnicos>();
	public string Filtro { get; set; } = string.Empty;
	public string ValorFiltro { get; set; } = string.Empty;

	protected override async Task OnInitializedAsync()
	{
		ListaTecnicos = await tecnicoservice.Listar(t => t.TecnicoId > 0);
	}

	private async Task Buscar()
	{
		if (Filtro == "TecnicoId" && int.TryParse(ValorFiltro, out var tecnicoId))
		{
			ListaTecnicos = await tecnicoservice.Listar(t => t.TecnicoId == tecnicoId);
		}
		else if (Filtro == "Nombre" && !string.IsNullOrWhiteSpace(ValorFiltro))
		{
			ListaTecnicos = await tecnicoservice.Listar(t => t.NombreTecnico.ToLower().Contains(ValorFiltro.ToLower()));
		}
	}
}