@page "/Tecnico/Modificar/{TecnicoId:int}"

@inject TecnicoService tecnicoService
@inject NavigationManager navigationManager
@rendermode InteractiveServer


<PageTitle>Editar Técnico</PageTitle>

<EditForm Model="Tecnico" OnValidSubmit="Guardar">
	<DataAnnotationsValidator></DataAnnotationsValidator>


	@*Notificaciones*@

	<label style="color:red; font-size:18px" hidden="@string.IsNullOrEmpty(ErrorNombre)">@ErrorNombre</label>
	<label style="color:green; font-size:18px;" hidden="@string.IsNullOrEmpty(GuardarExito)">@GuardarExito</label>


	<section class="container card shadow-lg">

		<header class="card-header position-relative text-center">
			<h5 class="card-title">Modificar técnicos </h5>
		</header>

		<div class="card-body">

			<div class="mb-3">
				<label class="form-label"><strong>TecnicoId</strong></label>
				<InputNumber class="form-control" @bind-Value="Tecnico.TecnicoId" readonly></InputNumber>

			</div>

			<hr style="height: 4px; background-color: #000;" />


			<div class="mb-3">

				<label class="form-label"><strong>Nombre</strong></label>
				<InputText class="form-control" @bind-Value="Tecnico.NombreTecnico"></InputText>
				<ValidationMessage For="(()=>Tecnico.NombreTecnico)" />
			</div>

			<hr style="height: 4px; background-color: #000;" />

			<div class="mb-3">
				<label class="form-label"><strong>Sueldo</strong></label>
				<InputNumber class="form-control" @bind-Value="Tecnico.SueldoHora"></InputNumber>
				<ValidationMessage For="(()=>Tecnico.SueldoHora)"></ValidationMessage>
			</div>
		</div>

		<div class="card-footer text-center mt-2">

			<a href="/Tecnico/Index" class="btn btn-outline-primary"><span class="bi bi-arrow-left"></span>Volver</a>
			<button type="submit" class="btn btn-outline-success"><span class="bi bi-floppy"></span> Guardar</button>

		</div>

	</section>

</EditForm>

@code {
	[Parameter]
	public int TecnicoId { get; set; }

	private Tecnicos Tecnico { get; set; } = new Tecnicos();
	public List<Tecnicos> ListaTecnicos { get; set; } = new List<Tecnicos>();
	private string ErrorNombre { get; set; } = string.Empty;
	private string GuardarExito { get; set; } = string.Empty;

	protected override async Task OnInitializedAsync()
	{
		Tecnico = await tecnicoService.Buscar(TecnicoId);
		ListaTecnicos = await tecnicoService.Listar(t => t.TecnicoId > 0);
	}

	public async Task Guardar()
	{
		ErrorNombre = string.Empty;
		GuardarExito = string.Empty;

		var Guardo = await tecnicoService.Guardar(this.Tecnico);
		if (Guardo != null)
		{
			GuardarExito = "Técnico guardado correctamente";
		}
		else
		{
			ErrorNombre = "Error al mofificar el técnico";
		}
	}



}
