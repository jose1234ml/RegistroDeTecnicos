@page "/Clientes/Eliminar/{ClienteId:int}"

@inject ClienteService clienteservice
@inject NavigationManager navigationManager
@rendermode InteractiveServer

<PageTitle>Eliminar Cliente</PageTitle>

<Toast Mensaje="@MensajeToast" Tipo="@TipoToast" Visible="@ToastVisible" OnClose="CerrarToast" />

<div class="container mt-4">
    @if (!string.IsNullOrEmpty(Pregunta))
    {
        <div class="text-center text-danger fs-5 fw-bold mb-3">
            @Pregunta
        </div>
    }
</div>

<div class="card shadow-lg mt-3">
    <div class="card-header text-center bg-primary text-white w-100">
        <div class="container">
            <h5 class="card-title mb-0">Eliminar Cliente</h5>
        </div>
    </div>

    <div class="card-body">
        <div class="container">
            @if (Cliente != null)
            {
                <div class="card shadow-sm" style="width: 300px;">
                    <div class="card-header bg-light fw-bold text-dark">
                        Datos del Cliente
                    </div>
                    <div class="card-body text-start">
                        <p><strong>Cliente ID:</strong> @Cliente.ClienteId</p>
                        <p><strong>Nombre:</strong> @Cliente.Nombres</p>
                        <p><strong>RNC:</strong> @Cliente.Rnc</p>
                    </div>
                </div>
            }
            else
            {
                <p class="text-center text-muted">Cliente no encontrado.</p>
            }
        </div>
    </div>

    <div class="card-footer text-center">
        <div class="container">
            @if (Cliente != null)
            {
                <div class="btn-group" role="group">
                    <a href="/Clientes/Index" class="btn btn-outline-primary">
                        <i class="bi bi-arrow-left"></i> Volver
                    </a>
                    <button class="btn btn-outline-danger" @onclick="ConfirmarEliminar">
                        <i class="bi bi-trash"></i> Eliminar
                    </button>
                </div>
            }
            else
            {
                <a href="/Clientes/Index" class="btn btn-outline-primary">
                    <i class="bi bi-arrow-left"></i> Volver al listado
                </a>
            }
        </div>
    </div>
</div>

@code {
    [Parameter]
    public int ClienteId { get; set; }

    private Cliente? Cliente { get; set; }

    private bool ToastVisible { get; set; }
    private string MensajeToast { get; set; } = string.Empty;
    private string TipoToast { get; set; } = "info";
    private string Pregunta { get; set; } = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        Cliente = await clienteservice.Buscar(ClienteId);
        if (Cliente != null)
        {
            Pregunta = "¿Está seguro de eliminar el cliente?";
        }
    }

    private async Task ConfirmarEliminar()
    {
        OcultarToast();

        var eliminado = await clienteservice.Eliminar(ClienteId);
        if (eliminado != null)
        {
            navigationManager.NavigateTo("/Clientes/Index");
        }
        else
        {
            MostrarToast("No se pudo eliminar el cliente.", "danger");
        }
    }

    private void MostrarToast(string mensaje, string tipo)
    {
        MensajeToast = mensaje;
        TipoToast = tipo;
        ToastVisible = true;
    }

    private void CerrarToast()
    {
        ToastVisible = false;
    }

    private void OcultarToast()
    {
        ToastVisible = false;
        MensajeToast = string.Empty;
    }
}